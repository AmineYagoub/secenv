"use strict";var e=require("path"),t=require("fs");function r(e,t){var r=t.get(e);if(!r)throw new TypeError("attempted to get private field on non-instance");return r.get?r.get.call(e):r.value}var n=new WeakMap;class o{constructor(e={}){n.set(this,{writable:!0,value:{}});const t={dir:"/run/secrets",encode:"utf8",override:!1,...e};this.init(t)}log(e){console.log("[SecEnv][DEBUG] "+e)}init(o){const{dir:s,encode:i,override:c}=o;if(t.existsSync(s))try{const o=t.readdirSync(s);for(const a of o){const o=e.join(s,a),l=t.readFileSync(o,i).toString().trim();r(this,n)[a]=l,Object.keys(process.env).includes(a)&&!c||(process.env[a]=l)}}catch(e){this.log(e.toString())}else this.log("Docker secrets is not mounted into the container")}getSecrets(){return r(this,n)}}module.exports.secEnv=(e={})=>Object.freeze(new o(e));
